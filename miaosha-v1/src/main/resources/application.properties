# =========================
# == Thymeleaf \u89C6\u56FE\u914D\u7F6E ==
# =========================
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
# \u5F00\u53D1\u73AF\u5883\u5EFA\u8BAE\u5173\u95ED\u7F13\u5B58
spring.thymeleaf.cache=false
spring.thymeleaf.content-type=text/html   # Boot 2.7 \u53EF\u7528\uFF1B\u65B0\u7248\u53EF\u7528 spring.thymeleaf.servlet.content-type
spring.thymeleaf.enabled=true
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.mode=HTML5

# \u9875\u9762\u7F13\u5B58\u5F00\u5173\uFF08\u4F60\u9879\u76EE\u81EA\u5B9A\u4E49\u7684 Key\uFF1B\u6CE8\u610F enbale \u5355\u8BCD\u62FC\u5199\uFF09
pageCache.enbale=true

# =========================
# == iBATIS/MyBatis \u65E5\u5FD7 ==
# =========================
log4j.logger.com.ibatis=DEBUG
log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=DEBUG
log4j.logger.com.ibatis.common.jdbc.ScriptRunner=DEBUG
log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG
log4j.logger.Java.sql.Connection=DEBUG
log4j.logger.java.sql.Statement=DEBUG
log4j.logger.java.sql.PreparedStatement=DEBUG
# \u2191 \u4EE5\u4E0A\u4E3A\u8001 iBATIS \u76F8\u5173\u65E5\u5FD7\u5206\u7C7B\uFF1B\u82E5\u4EC5\u4F7F\u7528 MyBatis\uFF0C\u53EF\u6309\u9700\u7CBE\u7B80

# =========================
# == MyBatis \u57FA\u672C\u914D\u7F6E ==
# =========================
mybatis.type-aliases-package=com.geekq.miaosha.domain
# \u4E0B\u5212\u7EBF\u8F6C\u9A7C\u5CF0
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.mapperLocations=classpath:com/geekq/miaosha/dao/*.xml

# \u53EF\u9009\uFF1A\u4F7F\u7528 mybatis-config.xml \u65F6\u518D\u5F00\u542F\u4E0B\u9762\u8FD9\u4E00\u9879
# mybatis.config-location=classpath:mybatis/mybatis-config.xml

# =========================
# == \u6570\u636E\u6E90\uFF08Druid\uFF09\u914D\u7F6E ==
# =========================
spring.datasource.url=jdbc:mysql://117.72.144.137:13306/miaosha?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.filters=stat
spring.datasource.maxActive=100
spring.datasource.initialSize=100
spring.datasource.maxWait=600
spring.datasource.minIdle=50
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=select 'x'
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxOpenPreparedStatements=20

# =========================
# == \u9759\u6001\u8D44\u6E90\uFF08Spring MVC\uFF09 ==
# =========================
spring.resources.add-mappings=true
spring.resources.cache-period=3600
spring.resources.chain.cache=true
spring.resources.chain.enabled=true
spring.resources.chain.gzipped=true
spring.resources.chain.html-application-cache=true
spring.resources.static-locations=classpath:/static/

# =========================
# == Redis \u8FDE\u63A5\u914D\u7F6E ==
# =========================
redis.host=117.72.144.137
redis.port=16379
redis.timeout=100
# redis.password=
redis.poolMaxTotal=1000
redis.poolMaxIdle=500
redis.poolMaxWait=500

# =========================
# == RabbitMQ\uFF08\u751F\u4EA7\u8005\uFF09 ==
# =========================
spring.rabbitmq.host=117.72.144.137
spring.rabbitmq.port=5672
spring.rabbitmq.username=admin
spring.rabbitmq.password=admin
spring.rabbitmq.virtual-host=/

# \u53D1\u5E03\u786E\u8BA4/\u8FD4\u56DE\uFF08\u66FF\u4EE3\u5DF2\u5E9F\u5F03\u7684 publisher-confirms\uFF09
# simple/correlated/none
spring.rabbitmq.publisher-confirm-type=correlated
# \u5F00\u542F ReturnCallback
spring.rabbitmq.publisher-returns=true
# \u65E0\u8DEF\u7531\u65F6\u9000\u56DE
spring.rabbitmq.template.mandatory=true
spring.rabbitmq.template.retry.enabled=true
spring.rabbitmq.template.retry.initial-interval=1000ms
spring.rabbitmq.template.retry.max-attempts=3
spring.rabbitmq.template.retry.max-interval=10000ms
spring.rabbitmq.template.retry.multiplier=1.0

# =========================
# == RabbitMQ\uFF08\u6D88\u8D39\u8005\uFF09 ==
# =========================
# Simple \u5BB9\u5668\u5E76\u53D1\u4E0E\u9884\u53D6
spring.rabbitmq.listener.simple.concurrency=1
spring.rabbitmq.listener.simple.max-concurrency=4
spring.rabbitmq.listener.simple.prefetch=1

# \u624B\u52A8 ACK\uFF1A\u52A1\u5FC5\u5728\u4EE3\u7801\u4E2D\u5BF9\u6BCF\u6761\u6D88\u606F\u660E\u786E basicAck/basicNack
spring.rabbitmq.listener.simple.acknowledge-mode=manual

# \u76D1\u542C\u629B\u5F02\u5E38\u65F6\u4E0D\u8981 requeue\uFF08\u914D\u5408 DLX/DLQ\uFF09
spring.rabbitmq.listener.simple.default-requeue-rejected=false

spring.rabbitmq.listener.simple.auto-startup=true
# \u5982\u6539\u7528 Direct \u5BB9\u5668\uFF0C\u518D\u914D\u7F6E listener.direct.*\uFF1B\u5426\u5219\u65E0\u9700\u5F00\u542F
# spring.rabbitmq.listener.direct.acknowledge-mode=manual
